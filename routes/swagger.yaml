openapi: 3.0.0
info:
  title: PocketMoney API
  version: 1.0.0
  description: API for PocketMoney application

servers:
  - url: 'http://localhost:3001'
    description: 'Development server'
  - url: 'http://localhost/api/'
    description: 'Production server'

paths:
  /budget/list:
    get:
      summary: Get list of budgets
      description: Returns list of budgets
      tags:
        - budget
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    name:
                      type: string

  /budget/{id}:
    get:
      summary: Get budget detail
      description:
      tags:
        - budget
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: Budget ID
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'

  /budget/new:
    post:
      summary: Add new budget
      tags:
        - budget
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Name of the budget
                addMandatoryExpenses:
                  type: boolean
                  description: If true Mandatory expenses defined in configuration are added to the budget.
      responses:
        200:
          description: Success

  /budget/update/{id}:
    put:
      summary: Update existing budget
      description:
      tags:
        - budget
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Name of the budget to be updated
      responses:
        200:
          description: Success

  /budget/delete/{id}:
    delete:
      summary: Delete budget
      description:
      tags:
        - budget
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget to be deleted
      responses:
        200:
          description: Success

  /budget/balance/add/{budgetid}:
    put:
      summary: Add new balance to the budget
      tags:
        - budget/balance
      parameters:
        - in: path
          name: budgetid
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget into which is the balance being added
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                account:
                  type: string
                  description: Balance account
                  enum: [Unicredit, Revolut, Kreditka, Hotovost]
                currentBalance:
                  type: integer
                  description: Actual balance on the account
                plannedBalance:
                  type: integer
                  description: Account balance which was planned at the beginning of the budget period
      responses:
        200:
          description: Success

  /budget/balance/update/{budgetid}:
    put:
      summary: Update budget balance
      tags:
        - budget/balance
      parameters:
        - in: path
          name: budgetid
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget in which the balance is being updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                balanceId:
                  type: string
                  description: ID of the balance being updated
                balanceName:
                  type: string
                  description: Account of the balance
                  enum: [Unicredit, Revolut, Kreditka, Hotovost]
                currentBalance:
                  type: integer
                  description: Actual account balance
                plannedBalance:
                  type: integer
                  description: Actual balance planned at the beginning of the budget period
      responses:
        200:
          description: Success

  /budget/balance/delete/{budgetid}:
    put:
      summary: Delete budget balance
      tags:
        - budget/balance
      parameters:
        - in: path
          name: budgetid
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget in which the balance is being deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                balanceId:
                  type: string
                  description: ID of the balance being deleted
      responses:
        200:
          description: Success

  /budget/expense/add/{budgetid}:
    put:
      summary: Add budget expense
      tags:
        - budget/expense
      parameters:
        - in: path
          name: budgetid
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget into which the expense is being added
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                expenseAccount:
                  type: string
                  description: Account from which the expense will be paid
                  enum: [Unicredit, Revolut, Kreditka, Hotovost]
                expenseName:
                  type: string
                  description: Name of the expense
                expenseType:
                  type: string
                  description: Type of the expense
                  enum: [Tax, Mandatory, Must, Others]
                paidAmount:
                  type: integer
                  description: Amount of the expense which was already paid
                plannedAmount:
                  type: integer
                  description: Amount of the expense planned at the beginning of the budget period
                remainingAmount:
                  type: integer
                  description: Remaining amount of the expense. It is changing as the expense is being paid during the budget period.
      responses:
        200:
          description: Success

  /budget/expense/update/{budgetid}:
    put:
      summary: Update budget expense
      tags:
        - budget/expense
      parameters:
        - in: path
          name: budgetid
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget in which the expense is being updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                expenseId:
                  type: string
                  description: ID of the expense being updated
                expenseAccount:
                  type: string
                  description: Account from which the expense will be paid
                  enum: [Unicredit, Revolut, Kreditka, Hotovost]
                expenseName:
                  type: string
                  description: Name of the expense
                expenseType:
                  type: string
                  description: Type of the expense
                  enum: [Tax, Mandatory, Must, Others]
                paidAmount:
                  type: integer
                  description: Amount of the expense which was already paid
                plannedAmount:
                  type: integer
                  description: Amount of the expense planned at the beginning of the budget period
                remainingAmount:
                  type: integer
                  description: Remaining amount of the expense. It is changing as the expense is being paid during the budget period.
      responses:
        200:
          description: Success

  /budget/expense/delete/{budgetid}:
    put:
      summary: Delete budget expense
      tags:
        - budget/expense
      parameters:
        - in: path
          name: budgetid
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the budget in which the expense is being deleted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                expenseId:
                  type: string
                  description: ID of the expense being deleted
      responses:
        200:
          description: Success

  /config/mandatoryExpenses/list:
    get:
      summary: Get list of Mandatory expenses
      description: Returns list of mandatory expenses
      tags:
        - config/mandatoryExpenses
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/MandatoryExpense'

  /config/mandatoryExpenses/new:
    post:
      summary: Add new Mandatory expense
      tags:
        - config/mandatoryExpenses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                expenseName:
                  type: string
                expenseAmount:
                  type: string
                expenseAccount:
                  type: string
                  enum: [Unicredit, Revolut, Kreditka, Hotovost]
      responses:
        200:
          description: Success

  /config/mandatoryExpenses/update/{id}:
    put:
      summary: Update Mandatory expense
      description:
      tags:
        - config/mandatoryExpenses
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the Mandatory expense being updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/MandatoryExpense'
      responses:
        200:
          description: Success

  /config/mandatoryExpenses/delete/{id}:
    delete:
      summary: Delete Mandatory expense
      description:
      tags:
        - config/mandatoryExpenses
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the Mandatory expense being deleted
      responses:
        200:
          description: Success

  /config/monthlyExpenses/list:
    get:
      summary: Returns list of ordinary expenses planned in the budget
      tags:
        - config/monthlyExpenses
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/MonthlyExpense'

  /config/monthlyExpenses/new:
    post:
      summary: Creates new planned repeating monthly expense
      tags:
        - config/monthlyExpenses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/MonthlyExpense'
      responses:
        200:
          description: Success

  /config/monthlyExpenses/update/{id}:
    put:
      summary: Updates repeating monthly expense
      tags:
        - config/monthlyExpenses
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the Monthly expense being updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/MonthlyExpense'
      responses:
        200:
          description: Success
        400:
          description: Wrong ID in path

  /config/monthlyExpenses/delete/{id}:
    delete:
      summary: Deletes Monthly repeating expense
      tags:
        - config/monthlyExpenses
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
          description: ID of the Monthly expense being deleted
      responses:
        200:
          description: Success
        400:
          description: Wrong ID in path
        500:
          description: Error when deleting expense

components:
  schemas:
    Budget:
      type: object
      properties:
        id:
          type: object
          description: ID of the budget
        name:
          type: string
          description:
        balances:
          type: array
          description: List of balances in the budget
          items:
            $ref: '#components/schemas/BudgetBalance'
        expenses:
          type: array
          description: List of expected expenses in the budget
          items:
            $ref: '#components/schemas/BudgetExpense'
        balancesSums:
          $ref: '#components/schemas/BudgetBalancesSums'

    BudgetBalancesSums:
      type: object
      description: Sums of planned and remaining balances over all accounts. And cumulative remaining balances after expense types amounts.
      properties:
        plannedBalanceSum:
          type: integer
          description: Sum of all planned balances from all the accounts
        remainingBalanceSum:
          type: integer
          description: Sum of all remaining balances from all the accounts
        remainingBalances:
          type: object
          description: Sum of remaining balances grouped by expense types
          properties:
            afterTax:
              type: integer
              description: Sum of overall remaining balance after Tax expenses
            afterTaxMandatory:
              type: integer
              description: Sum of overall remaining balance after Tax and Mandatory expenses
            afterTaxMandatoryMust:
              type: integer
              description: Sum of overall remaining balances after Tax, Mandatory and Must expenses
            afterTaxMandatoryMustOthers:
              type: integer
              description: Sum of overall remaining balances after Tax, Mandatory, Must and Others expenses

    BudgetExpense:
      type: object
      description: Expense in the concrete budget
      properties:
        id:
          type: object
          description: Budget expense ID
        expenseName:
          type: string
          description: Budget expense name
        expenseType:
          type: string
          description: Type of the expense
          enum: [Tax, Mandatory, Must, Other]
        expenseAccount:
          type: string
          description: Account (balance) from which the expense will be covered
          enum: [Unicredit, Revolut, Kreditka, Hotovost]
        plannedAmount:
          type: integer
          description: Planned amount of the expense at the beginning of the budget period
        remainingAmount:
          type: integer
          description: Actual remaining amount of the expense in the budget. It is changing as the part (or whole) amount of the expense can be spent during the budget period.
        paidAmount:
          type: integer
          description: Already paid amount of the expense

    BudgetBalance:
      type: object
      description: Actual balance in the concrete budget
      properties:
        id:
          type: object
          description: Budget balance ID
        balanceName:
          type: string
          description: Name of the balance
        account:
          type: string
          description: Account of the balance
          enum: [Unicredit, Revolut, Kreditka, Hotovost]
        currentBalance:
          type: integer
          description: Actual balance amount. It is changing during the budget period as the balance is being spent.
        plannedBalance:
          type: integer
          description: Planned balance at the beginning of the budget period
        remainingBalanceAfterTax:
          type: integer
          description: Remaining balance of the account after remaining amount of Tax expenses
        remainingBalanceAfterTaxMandatory:
          type: integer
          description: Remaining balance of the account after remaining amount of Tax and Mandatory expenses
        remainingBalanceAfterTaxMandatoryMust:
          type: integer
          description: Remaining balance of the account after remaining amount of Tax, Mandatory and Must expenses
        remainingBalanceAfterTaxMandatoryMustOthers:
          type: integer
          description: Remaining balance of the account after remaining amount of Tax, Mandatory, Must and Others expenses

    MonthlyExpense:
      type: object
      description: It is the repeating expense in every monthly budget
      properties:
        _id:
          type: string
        name:
          type: string
        amount:
          type: string
        account:
          type: string
          description:
          enum: [Unicredit, Revolut, Kreditka, Hotovost]
        type:
          type: string
          description:
            - Mandatory - it is monthly repeating expense which must be paid (e.g. rent).
            - Must - it is planned expense or expense category which will have to be paid within the monthly budget. Its amount can change (e.g. groceries)
          enum: [Mandatory, Must]

    Account:
      type: object
      description:
        - It is any asset that holds balance and can be used for spendings (e.g. current account, cash, credit card ...)
        - Accounts are used in budget as the holders of balances
      properties:
        _id:
          type: string
        name:
          type: string
        balance:
          type: integer
        currency:
          type: string

    SavingsAsset:
      type: object
      description: It is any asset used for savings
      properties:
        _id:
          type: string
        name:
          type: string
        balance:
          type: integer
        currency:
          type: string
        regularSavings:
          type: integer

    Transaction:
      type: object
      description: It is any financial movement on the asset (i.e. account or savings asset)
      properties:
        _id:
          type: string
        name:
          type: string
        amount:
          type: integer
        currency:
          type: string
        date:
          type: string
          format: date
        type:
          type: string
          enum: [debit, credit, transfer]
        account:
          type: string
          enum: [Unicredit, Revolut, Kreditka, Hotovost, ...]
